name: 🚀 Deploy Enterprise Production

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  security-audit:
    name: 🔒 Security Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      
      - name: Install pnpm
        run: npm install -g pnpm
      
      - name: Install dependencies
        run: pnpm install
      
      - name: Frontend Security Audit
        run: pnpm audit --audit-level=moderate
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      
      - name: Install pip-audit
        run: pip install pip-audit
      
      - name: Backend Security Audit
        working-directory: services/api
        run: |
          pip install -r requirements-secure.txt
          pip-audit --ignore-vuln PYSEC-2025-11 --ignore-vuln GHSA-j3wr-m6xh-64hg --ignore-vuln GHSA-jmgm-gx32-vp4w --ignore-vuln GHSA-g99h-56mw-8263

  build-and-test:
    name: 🏗️ Build & Test
    runs-on: ubuntu-latest
    needs: security-audit
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      
      - name: Install pnpm
        run: npm install -g pnpm
      
      - name: Install dependencies
        run: pnpm install
      
      - name: Build Frontend
        run: pnpm build --filter=@repo/web
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      
      - name: Test Backend
        working-directory: services/api
        run: |
          pip install -r requirements-secure.txt
          python -c "import main_simple; print('✅ API imports successfully')"

  deploy-backend:
    name: 🚂 Deploy Backend (Railway)
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Railway CLI
        run: npm install -g @railway/cli
      
      - name: Deploy to Railway
        working-directory: services/api
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          railway login --token $RAILWAY_TOKEN
          railway up --detach

  deploy-frontend:
    name: ▲ Deploy Frontend (Vercel)
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      
      - name: Install pnpm
        run: npm install -g pnpm
      
      - name: Install Vercel CLI
        run: npm install -g vercel
      
      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          vercel --token $VERCEL_TOKEN --prod --yes

  health-check:
    name: 🏥 Health Check
    runs-on: ubuntu-latest
    needs: [deploy-backend, deploy-frontend]
    steps:
      - name: Wait for deployment
        run: sleep 60
      
      - name: Check Backend Health
        run: |
          curl -f https://api.agentesdeconversao.ai/health || exit 1
          echo "✅ Backend is healthy"
      
      - name: Check Frontend Health
        run: |
          curl -f https://agentesdeconversao.ai || exit 1
          echo "✅ Frontend is healthy"
      
      - name: Deployment Success Notification
        run: |
          echo "🎉 DEPLOYMENT SUCCESSFUL!"
          echo "🌐 Frontend: https://agentesdeconversao.ai"
          echo "🔌 Backend: https://api.agentesdeconversao.ai"
          echo "📚 Docs: https://api.agentesdeconversao.ai/docs"